/*
 * Copyright (c) 2020 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;

            // tap: keycode | hold: modifier

            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 9 10 11 18 19 21 22 23 30 31 32 33 34 35 39 40 41 8 20>; // right side home row key positions
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>; // left side home row key positions
            hold-trigger-on-release;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //  +------------------------------------+        +------------------------------------+
            //  | ESC  |  '  |  ,  |  .  |  P  |  Y  |        |  F  |  G  |  C  |  R  |  L  | BKSP |
            //  | CTRL |  A  |  O  |  E  |  U  |  I  |        |  D  |  H  |  T  |  N  |  S  | DEL  |
            //  | SHFT |  ;  |  Q  |  J  |  K  |  X  |        |  B  |  M  |  W  |  V  |  Z  | TAB  |
            //  +------------------| GUI | LWR | SPC |        | RSE | ENT | ALT |------------------+
            //                     +-----------------+        +-----------------+

            bindings = <
&gresc     &kp SQT       &kp COMMA    &kp DOT              &kp P        &kp Y        &kp F          &kp G        &kp C         &kp R        &kp L          &kp BSPC
&kp TAB    &hml LSHFT A  &hml LALT O  &hml LEFT_CONTROL E  &hml LGUI U  &kp I        &kp D          &hmr RGUI H  &hmr RCTRL T  &hmr RALT N  &hmr RSHIFT S  &kp MINUS
&kp LSHFT  &kp SEMI      &kp Q        &kp J                &kp K        &kp X        &kp B          &kp M        &kp W         &kp V        &kp Z          &kp SLASH
                                      &kp LGUI             &kp ENTER    &kp SPACE    &kp BACKSPACE  &kp SPACE    &kp RALT
            >;
        };

        lower_layer {
            //  +------------------------------------+        +------------------------------------+
            //  | ESC  | F7  | F5  | F3  | F1  | F9  |        | F11 | F2  | F4  | F6  | RGT | BKSP |
            //  | CTRL |  1  |  2  |  3  |  4  |  5  |        |  6  |  7  |  8  |  9  |  0  | DEL  |
            //  | SHFT |     |     |     |     |     |        |     |     |     |     |     | TAB  |
            //  +------------------| GUI |     | SPC |        |     | ENT | ALT |------------------+
            //                     +-----------------+        +-----------------+

            bindings = <
&trans  &kp F7  &kp F5  &kp F3  &kp F1  &kp F9    &kp F11  &kp F2  &kp F4  &kp F6  &kp F8  &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6   &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans   &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans   &trans  &trans
            >;
        };

        raise_layer {
            //  +------------------------------------+        +------------------------------------+
            //  | ESC  |  "  |  <  |  >  |  #  |  1  |        |  2  |  &  |  }  |  {  |  %  | BKSP |
            //  | CTRL |  !  |  -  |  +  |  =  |  _  |        |  |  |  :  |  )  |  (  |  ?  | DEL  |
            //  | SHFT |  ^  |  /  |  *  |  \  |  $  |        |  `  |  ~  |  ]  |  [  |  @  | TAB  |
            //  +------------------| GUI |     | SPC |        |     | ENT | ALT |------------------+
            //                     +-----------------+        +-----------------+

            bindings = <
&trans     &kp DQT    &kp LT     &kp GT    &kp HASH   &kp N1       &kp N2     &kp AMPS   &kp RBRC  &kp LBRC  &kp PRCNT  &trans
&kp LCTRL  &kp EXCL   &kp MINUS  &kp PLUS  &kp EQUAL  &kp UNDER    &kp PIPE   &kp COLON  &kp RPAR  &kp LPAR  &kp QMARK  &trans
&trans     &kp CARET  &kp FSLH   &kp STAR  &kp BSLH   &kp DLLR     &kp GRAVE  &kp TILDE  &kp RBKT  &kp LBKT  &kp AT     &trans
                                 &trans    &trans     &trans       &trans     &trans     &trans
            >;
        };

        tri_layer {
            //  +------------------------------------+        +------------------------------------+
            //  | ESC  | BT0 | BT1 | BT2 |     | BCR |        |     |     | UP  |     |     | BKSP |
            //  | CTRL |     |     |     |     |     |        |     | LFT | DWN | RGT |     | DEL  |
            //  | SHFT |     |     |     |     |     |        |     |     |     |     |     | TAB  |
            //  +------------------| GUI |     | SPC |        |     | ENT | ALT |------------------+
            //                     +-----------------+        +-----------------+

            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans        &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans        &trans        &kp DOWN      &kp UP  &trans        &trans  &trans    &trans    &trans     &trans  &trans
                                    &trans        &trans  &trans        &trans  &trans    &trans
            >;
        };
    };
};
